
CREATE TABLE IF NOT EXISTS Roles(
    id INTEGER NOT NULL UNIQUE AUTO_INCREMENT,
    NAME TEXT,
    rights INT,
    PRIMARY KEY(role));

CREATE TABLE IF NOT EXISTS Images(
    id INT UNIQUE NOT NULL AUTO_INCREMENT,
    filep TEXT,
    
    PRIMARY KEY(id));

CREATE TABLE IF NOT EXISTS Users(
    id INTEGER NOT NULL UNIQUE AUTO_INCREMENT,
    username TEXT,
    email TEXT,
    role INT,


    creationdate DATE,
    profileImage INT,
    
    FOREIGN KEY(role) REFERENCES Roles(id),
    FOREIGN KEY(profileImage) REFERENCES Images(id),
    PRIMARY KEY(id));



CREATE TABLE IF NOT EXISTS Subscribtions(
    id INTEGER NOT NULL UNIQUE AUTO_INCREMENT,
    idsubscriber INTEGER,
    idsubscribed INTEGER,
    datesubsribtion DATE,
    FOREIGN KEY(idsubsriber) REFERENCES Users(id),
    FOREIGN KEY(idsubscribed) REFERENCES Users(id),
    PRIMARY KEY(id));



CREATE TABLE IF NOT EXISTS Files(
    id INTEGER NOT NULL UNIQUE AUTO_INCREMENT,
    iduser INTEGER,
    NAME TEXT,
    datepubli DATE,
    filep TEXT,
    imagep INT,
    FOREIGN KEY(iduser) REFERENCES Users(id),
    FOREIGN KEY(imagep) REFERENCES Images(id)
    PRIMARY KEY(id));


CREATE TABLE IF NOT EXISTS Rating(
    id INTEGER NOT NULL UNIQUE AUTO_INCREMENT,
    idfileshare INTEGER,
    iduser INTEGER,
    value INTEGER,
    FOREIGN KEY(idfileshare) REFERENCES Files(id),
    FOREIGN KEY(iduser) REFERENCES Users(id),
    PRIMARY KEY(id));


CREATE TABLE IF NOT EXISTS Comments(
    id INTEGER NOT NULL UNIQUE AUTO_INCREMENT,
    iduser INTEGER,
    idfileshare INTEGER,
    idcommentawnser INTEGER,
    content TEXT,
    datepubl DATE,
    FOREIGN KEY(iduser) REFERENCES Users(id),
    FOREIGN KEY(idfileshare) REFERENCES Files(id),
    FOREIGN KEY(idcommentawnser) REFERENCES Comments(id),
    PRIMARY KEY(id));

